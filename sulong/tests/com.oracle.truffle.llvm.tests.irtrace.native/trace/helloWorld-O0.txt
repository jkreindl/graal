<node id="0" tags="FUNCTION, LLVM_STATEMENT" properties="{LLVM_NAME = main, SOURCE_NAME = main}source="O0.bc:main:1:1""><node id="1" tags="BLOCK, LLVM_STATEMENT" properties="{BLOCK_ID = 0, BLOCK_NAME = 0}"><node id="2" tags="LLVM_STATEMENT, SSA_WRITE" properties="{VALUE_TYPE = i32*, TARGET_SSA_NAME = 1}"><node id="3" tags="ALLOCA, LLVM_EXPRESSION" properties="{VALUE_TYPE = i32*, ALLOCA_TYPE = i32, ALLOCA_ALIGN = 4}"><output>Native Pointer</output></node><input index="0" source="3">Native Pointer</input></node><node id="4" tags="LLVM_STATEMENT, STORE" properties="{BYTE_SIZE = 8}"><node id="5" tags="LLVM_EXPRESSION, SSA_READ" properties="{VALUE_TYPE = i32*, SOURCE_SSA_NAME = 1}"><output>Native Pointer</output></node><input index="0" source="5">Native Pointer</input><node id="6" tags="CONSTANT, LITERAL, LLVM_EXPRESSION" properties="{VALUE_TYPE = i32}"><output>0</output></node><input index="1" source="6">0</input></node><node id="7" tags="LLVM_STATEMENT, SSA_WRITE" properties="{VALUE_TYPE = i32, TARGET_SSA_NAME = 2}"><node id="8" tags="CALL, LLVM_EXPRESSION" properties="{VALUE_TYPE = i32, ARGS_COUNT = 1}"><node id="9" tags="GLOBAL_READ, LITERAL, LLVM_EXPRESSION" properties="{VALUE_TYPE = i32 (i8*, ...), LLVM_NAME = printf}"><output>Managed Pointer(target = 'printf')</output></node><input index="1" source="9">Managed Pointer(target = 'printf')</input><node id="10" tags="CONSTANT, GETELEMENTPTR, LLVM_EXPRESSION" properties="{VALUE_TYPE = i8*, SOURCE_TYPE = [14 x i8]*, IS_INBOUND = true, INDEX_TYPES = [i32, i32], INDEX_VALUES = [0, 0]}"><output>Native Pointer</output></node><input index="0" source="10">Native Pointer</input><output>13</output></node><input index="0" source="8">13</input></node></node><node id="11" tags="LLVM_CONTROL_FLOW, LLVM_STATEMENT, RET" properties="{VALUE_TYPE = void}"><node id="12" tags="CONSTANT, LITERAL, LLVM_EXPRESSION" properties="{VALUE_TYPE = i32}"><output>0</output></node><input index="0" source="12">0</input><output>0</output></node><output>0</output></node>